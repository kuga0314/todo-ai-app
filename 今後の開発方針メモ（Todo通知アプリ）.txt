📌 今後の開発方針メモ（Todo通知アプリ）
1. 現状の仕組み

通知アルゴリズム

後方計画（締切から逆算して最遅開始時刻を算出）

比例バッファ（規模・優先度に応じて余裕を確保）

危険度スコア（残り時間÷所要時間で優先度決定）

積み上げ配置（同時通知を分散）

評価指標（仮説 H1〜H4）

締切前に始められる割合 ↑

締切遵守率 ↑

通知の過密 ↓

大規模タスクの後回し防止 ↑

2. 新規の方向性

修正版PERTを導入

所要時間を O/M/P（楽観・最確・悲観）で扱い、タスク規模に応じて重み付け

信頼範囲（平均 ± σ）を活用し、通知を

安全寄り（平均＋σ）

平均（そのまま）

挑戦寄り（平均−σ）
の3モードで選択可能にする。

研究目的

どのリスクモードが最も有効かを比較し、全体の結論を出す。

加えて、タスク特性（大/小、不確実/確実、優先度 高/低）に応じた“使い分け指針”を提示。

3. 実験方針

実験デザイン

各モードを 1か月ごとに切り替えて使用。

ログから以下を記録：

P(A ≤ L)：締切前に開始できたか

締切超過率

通知数・過密度

Start Slack（余裕時間）

期待される結果

平均モード：最もバランス良好（主結論にしやすい）

安全寄り：大規模＆不確実タスクに強い

挑戦寄り：小規模タスクや通知過多を嫌うユーザー向け

4. 実装タスク

 riskMode を safe/mean/challenge で切替できるよう設定画面に反映

 タスク作成時に estimatedMinutes と scale(不確実性) を保存

 scheduleShift.js に信頼範囲ロジックを統合（既に modifiedPERT 対応済み）

 Cloud Functions ログにモード別イベントを書き込み（metrics コレクション）

 UIに「おすすめモード」表示（例：大規模タスクなら安全推奨）

5. 卒論での結論イメージ

平均モードが全体の初期設定として最適

大規模タスクには安全寄りが有効

小規模かつ確実なタスクには挑戦寄りも有効

→ 「平均を基盤に、状況やユーザー特性に応じた切替が有効」という結論に落とす。